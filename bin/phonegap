#!/usr/bin/env ruby

$: << File.join(File.dirname(__FILE__), *%w[.. lib])

require 'optparse'
require 'phonegap'

options = {
  platforms: [],
  config: "debug",
  target: "emulator",
  name: "app",
  build: true
}

opts = OptionParser.new do |opts|
  opts.summary_width = 25
  opts.banner = "Usage: phonegap [OPTIONS] PATH"

  opts.separator ""
  opts.separator "Configuration:"
  
  opts.on("--ios", "Compile iOS applications") do |v|
    options[:platforms] << :ios
  end

  opts.on("--android", "Compile Android applications") do |v|
    options[:platforms] << :android
  end

  opts.separator ""  
  opts.separator "Optional:"
  
  opts.on("--target [TARGET]", String, "Either 'device' or 'emulator'") do |v|
    options[:target] = v
  end
  
  opts.on("--config [TYPE]", String, "Either 'debug' or 'release'") do |v|
    options[:config] = v
  end
  
  opts.on("--name [NAME]", String, "Application name") do |v|
    options[:name] = v
  end
  
  opts.on("--[no-]build", "Build application (default is true)") do |v|
    options[:build] = v
  end
  
  opts.separator ""; opts.separator "Miscellaneous:"
  
  opts.on_tail("-?", "--help", "Display this usage information") do
    puts "#{opts}\n"
    exit
  end
  
  opts.on_tail("-v", "--version", "Display version") do |v|
    puts "PhoneGap #{PhoneGap::VERSION}"
    exit
  end
  
  opts.parse!
end

path = ARGV[0]

if path.nil? or options[:platforms].empty?
  puts "#{opts}\n"
  exit
end

PhoneGap.build(path, options)